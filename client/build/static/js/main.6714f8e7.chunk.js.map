{"version":3,"sources":["services/requestHelper.js","services/domainRequest/auth.js","services/localStorageHelper.js","services/authService.js","components/signIn/index.jsx","services/domainRequest/userRequest.js","components/signUp/index.jsx","components/signInUpPage/index.jsx","services/domainRequest/fightersRequest.js","components/newFighter/index.jsx","components/fighter/index.jsx","components/fight/index.jsx","components/signOut/index.jsx","components/startScreen/index.jsx","App.js","serviceWorker.js","index.js"],"names":["get","entityName","a","id","makeRequest","post","body","path","method","url","fetch","JSON","stringify","undefined","headers","res","json","dataObj","ok","alert","message","console","error","login","setLocalStorageItem","key","val","value","localStorage","setItem","isSignedIn","data","getItem","parse","getObjectFromLocalStorage","setLoginSession","user","useStyles","makeStyles","theme","root","margin","spacing","width","SignIn","setIsLoggedIn","classes","useState","email","setEmail","password","setPassword","onSubmit","className","noValidate","autoComplete","onChange","event","target","label","placeholder","type","Button","onClick","variant","color","createUser","SignUp","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","signPages","SignInSignUpPage","state","index","setIndex","setState","this","props","React","getFighters","createFighter","NewFighter","onCreated","name","setName","power","setPower","defense","setDefense","Number","formControl","minWidth","selectEmpty","marginTop","Fighter","fightersList","onFighterSelect","selectedFighter","fighter","setFighter","FormControl","InputLabel","Select","labelId","map","it","health","Fight","fighters","fighter1","fighter2","onFightStart","onCreate","onFighter1Select","onFighter2Select","getFighter1List","filter","getFighter2List","length","Component","SignOut","onSignOut","StartScreen","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6714f8e7.chunk.js","sourcesContent":["const apiUrl = '/api';\r\n\r\nexport const get = async (entityName, id = '') => {\r\n    return await makeRequest(`${entityName}/${id}`, 'GET');\r\n}\r\n\r\nexport const post = async (entityName, body) => {\r\n    return await makeRequest(entityName, 'POST', body);\r\n}\r\n\r\nexport const put = async (entityName, id, body) => {\r\n    return await makeRequest(`${entityName}/${id}`, 'PUT', body);\r\n}\r\n\r\nexport const deleteReq = async (entityName, id) => {\r\n    return await makeRequest(`${entityName}/${id}`, 'DELETE');\r\n}\r\n\r\nconst makeRequest = async (path, method, body) => {\r\n    try {\r\n        const url = `${apiUrl}/${path}`\r\n        const res = await fetch(url, {\r\n            method,\r\n            body: body ? JSON.stringify(body) : undefined ,\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        });\r\n\r\n        const dataObj = await res.json();\r\n\r\n        if(res.ok) {\r\n            return dataObj;\r\n        }\r\n\r\n        alert(`${dataObj.message}`);\r\n        return dataObj;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}","import { post } from \"../requestHelper\"\r\n\r\nexport const login = async (body) => {\r\n    return await post('auth/login', body);\r\n}","export const setLocalStorageItem = (key, val) => {\r\n    const value = typeof val === 'object' ? JSON.stringify(val) : val;\r\n    localStorage.setItem(key, value);\r\n}\r\n\r\nexport const getObjectFromLocalStorage = (key) => {\r\n    const data = localStorage.getItem(key);\r\n    if(data) {\r\n        return JSON.parse(data);\r\n    }\r\n    return null;\r\n}","import { setLocalStorageItem, getObjectFromLocalStorage } from \"./localStorageHelper\";\r\n\r\nexport const isSignedIn = () => {\r\n    const user = getObjectFromLocalStorage('user');\r\n    return user ? true : false;\r\n};\r\n\r\nexport const setLoginSession = (user) => {\r\n    setLocalStorageItem('user', user);\r\n}\r\n\r\nexport const unsetLoginSession = () => {\r\n    setLocalStorageItem('user', null);\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField } from 'material-ui';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './signIn.css';\r\nimport { login } from '../../services/domainRequest/auth';\r\nimport { setLoginSession } from '../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SignIn({ setIsLoggedIn }) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        const data = await login({ email, password });\r\n        if(data && !data.error) {\r\n            setLoginSession(data);\r\n            setIsLoggedIn(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField onChange={onEmailChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Email\"/>\r\n            <TextField onChange={onPasswordChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Password\" type=\"password\"/>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        </form>\r\n    )\r\n}","import { post } from \"../requestHelper\";\r\nconst entity = 'users'\r\n\r\nexport const createUser = async (body) => {\r\n    return await post(entity, body);\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField } from 'material-ui';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { createUser } from '../../services/domainRequest/userRequest';\r\nimport { setLoginSession } from '../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SignUp({ setIsLoggedIn }) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLastName] = useState();\r\n    const [phoneNumber, setPhoneNumber] = useState();\r\n\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const onFirstNameChange = (event) => {\r\n        setFirstName(event.target.value);\r\n    }\r\n\r\n    const onLastNameChange = (event) => {\r\n        setLastName(event.target.value);\r\n    }\r\n\r\n    const onPhoneNumberChange = (event) => {\r\n        setPhoneNumber(event.target.value);\r\n    }\r\n    \r\n\r\n    const onSubmit = async () => {\r\n        const data = await createUser({ email, password, firstName, lastName, phoneNumber });\r\n        if(data && !data.error) {\r\n            setLoginSession(data);\r\n            setIsLoggedIn(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField key=\"first-name\" onChange={onFirstNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"First Name\"/>\r\n            <TextField key=\"last-name\" onChange={onLastNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Last Name\"/>\r\n            <TextField key=\"email\" onChange={onEmailChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Email\"/>\r\n            <TextField key=\"phone\" onChange={onPhoneNumberChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Phone Number\"/>\r\n            <TextField key=\"password\" onChange={onPasswordChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Password\" type=\"password\"/>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Sign Up</Button>\r\n        </form>\r\n    )\r\n}","import * as React from 'react';\r\nimport './signInUpPage.css';\r\nimport SignIn from '../signIn';\r\nimport SignUp from '../signUp';\r\n\r\nconst signPages = {\r\n    signIn: 0,\r\n    signUp: 1\r\n};\r\n\r\nclass SignInSignUpPage extends React.Component {\r\n    state = {\r\n        index: signPages.signUp\r\n    };\r\n\r\n    setIndex = (index) => {\r\n        this.setState({ index });\r\n    }\r\n\r\n    render() {\r\n        const { index } = this.state;\r\n\r\n        return (\r\n            <div id=\"sign-in-up\">\r\n                <div id=\"form-wrapper\">\r\n                    <div className=\"header\">\r\n                        <div onClick={() => this.setIndex(signPages.signIn)} className={`${index === signPages.signIn ? 'active' : ''}`}>Sign In</div>\r\n                        <div onClick={() => this.setIndex(signPages.signUp)} className={`${index === signPages.signUp ? 'active' : ''}`}>Sign Up</div>\r\n                    </div>\r\n                    {index === signPages.signIn ? <SignIn setIsLoggedIn={this.props.setIsLoggedIn} /> : <SignUp setIsLoggedIn={this.props.setIsLoggedIn}/>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignInSignUpPage;","import { get, post } from \"../requestHelper\";\r\n\r\nconst entity = 'fighters';\r\n\r\nexport const getFighters = async () => {\r\n    return await get(entity);\r\n}\r\n\r\nexport const createFighter = async (body) => {\r\n    return await post(entity, body);\r\n}","import { TextField } from \"material-ui\"\r\nimport { createFighter } from \"../../services/domainRequest/fightersRequest\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport './newFighter.css';\r\n\r\nexport default function NewFighter({ onCreated }) {\r\n    const [name, setName] = useState();\r\n    const [power, setPower] = useState();\r\n    const [defense, setDefense] = useState();\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const onPowerChange = (event) => {\r\n        const value = event.target.value || event.target.value === 0 ? Number(event.target.value) : null;\r\n        setPower(value);\r\n    }\r\n\r\n    const onDefenseChange = (event) => {\r\n        const value = event.target.value || event.target.value === 0 ? Number(event.target.value) : null;\r\n        setDefense(value);\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        const data = await createFighter({ name, power, defense });\r\n        if(data && !data.error) {\r\n            onCreated(data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"new-fighter\">\r\n            <div>New Fighter</div>\r\n            <TextField onChange={onNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Name\"/>\r\n            <TextField onChange={onPowerChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Power\" type=\"number\" />\r\n            <TextField onChange={onDefenseChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Defense\" type=\"number\" />\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Create</Button>\r\n        </div>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport { FormControl, InputLabel, makeStyles, Select } from '@material-ui/core';\r\nimport { MenuItem } from 'material-ui';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Fighter({ fightersList, onFighterSelect, selectedFighter }) {\r\n    const classes = useStyles();\r\n    const [fighter, setFighter] = useState();\r\n\r\n    const handleChange = (event) => {\r\n        debugger;\r\n        setFighter(event.target.value);\r\n        onFighterSelect(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"simple-select-label\">Select Fighter</InputLabel>\r\n                <Select\r\n                    labelId=\"simple-select-label\"\r\n                    id=\"simple-select\"\r\n                    value={fighter}\r\n                    onChange={handleChange}\r\n                >\r\n                    {fightersList && fightersList.map((it, index) => {\r\n                        return (\r\n                            <MenuItem key={`${index}`} value={it}>{it.name}</MenuItem>\r\n                        );\r\n                    })}\r\n                </Select>\r\n                {selectedFighter\r\n                    ? <div>\r\n                        <div>Name: {selectedFighter.name}</div>\r\n                        <div>Power: {selectedFighter.power}</div>\r\n                        <div>Defense: {selectedFighter.defense}</div>\r\n                        <div>Health: {selectedFighter.health}</div>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </FormControl>\r\n        </div>)\r\n}\r\n","import React from 'react';\r\n\r\nimport { getFighters } from '../../services/domainRequest/fightersRequest';\r\nimport NewFighter from '../newFighter';\r\nimport Fighter from '../fighter';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './fight.css'\r\n\r\nclass Fight extends React.Component {\r\n    state = {\r\n        fighters: [],\r\n        fighter1: null,\r\n        fighter2: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const fighters = await getFighters();\r\n\r\n        if(fighters.length > 0 && !fighters.error) {\r\n            this.setState({ fighters });\r\n        }\r\n    }\r\n\r\n    onFightStart = () => {\r\n        \r\n    }\r\n\r\n    onCreate = (fighter) => {\r\n        this.setState({ fighters: [...this.state.fighters, fighter] });\r\n    }\r\n\r\n    onFighter1Select = (fighter1) => {\r\n        this.setState({fighter1 });\r\n    }\r\n\r\n    onFighter2Select = (fighter2) => {\r\n        this.setState({ fighter2 });\r\n    }\r\n\r\n    getFighter1List = () => {\r\n        const { fighter2, fighters } = this.state;\r\n        if(!fighter2) {\r\n            return fighters;\r\n        }\r\n\r\n        return fighters.filter(it => it.id !== fighter2.id);\r\n    }\r\n\r\n    getFighter2List = () => {\r\n        const { fighter1, fighters } = this.state;\r\n        if(!fighter1) {\r\n            return fighters;\r\n        }\r\n\r\n        return fighters.filter(it => it.id !== fighter1.id);\r\n    }\r\n\r\n    render() {\r\n        const  { fighter1, fighter2 } = this.state;\r\n        return (\r\n            <div id=\"wrapper\">\r\n                <NewFighter onCreated={this.onCreate} />\r\n                <div id=\"figh-wrapper\">\r\n                    <Fighter selectedFighter={fighter1} onFighterSelect={this.onFighter1Select} fightersList={this.getFighter1List() || []} />\r\n                    <div className=\"btn-wrapper\">\r\n                        <Button onClick={this.onFightStart} variant=\"contained\" color=\"primary\">Start Fight</Button>\r\n                    </div>\r\n                    <Fighter selectedFighter={fighter2} onFighterSelect={this.onFighter2Select} fightersList={this.getFighter2List() || []} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fight;","import { unsetLoginSession } from \"../../services/authService\";\r\nimport React from 'react';\r\nimport './signOut.css';\r\n\r\nexport default function SignOut({ isSignedIn, onSignOut}) {\r\n    const signOut = () => {\r\n        unsetLoginSession();\r\n        onSignOut();\r\n    }\r\n\r\n    if(isSignedIn) {\r\n        return (\r\n            <div onClick={signOut} id=\"sign-out\">Sign out</div>\r\n        )\r\n    }\r\n\r\n    return null;\r\n}","import * as React from 'react';\r\nimport SignInUpPage from '../signInUpPage';\r\nimport { isSignedIn } from '../../services/authService';\r\nimport Fight from '../fight';\r\nimport SignOut from '../signOut';\r\n\r\nclass StartScreen extends React.Component {\r\n    state = {\r\n        isSignedIn: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setIsLoggedIn(isSignedIn());\r\n    }\r\n\r\n    setIsLoggedIn = (isSignedIn) => {\r\n        this.setState({ isSignedIn });\r\n    }\r\n\r\n    render() {\r\n        const { isSignedIn } = this.state;\r\n        if (!isSignedIn) {\r\n            return <SignInUpPage setIsLoggedIn={this.setIsLoggedIn} />\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Fight />\r\n                <SignOut isSignedIn={isSignedIn} onSignOut={() => this.setIsLoggedIn(false)} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartScreen;","import React from 'react';\r\nimport StartScreen from './components/startScreen'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <MuiThemeProvider>\r\n      <StartScreen />\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}